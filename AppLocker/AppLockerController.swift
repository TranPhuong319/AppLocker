import Foundation
import AppKit

class AppLockerController {
    static let shared = AppLockerController()
    private var observer: Any?

    func startMonitoring() {
        // L·∫Øng nghe ngay khi 1 app m·ªõi launch
        observer = NSWorkspace.shared.notificationCenter.addObserver(
            forName: NSWorkspace.didLaunchApplicationNotification,
            object: nil,
            queue: .main
        ) { [weak self] note in
            self?.handleLaunch(notification: note)
        }
    }

    private func handleLaunch(notification: Notification) {
        guard
            let userInfo = notification.userInfo,
            let app = userInfo[NSWorkspace.applicationUserInfoKey] as? NSRunningApplication,
            let bundleID = app.bundleIdentifier
        else { return }

        let manager = LockedAppsManager()
        // N·∫øu app n√†y n·∫±m trong danh s√°ch kh√≥a
        if manager.isLocked(bundleID) {
            // N·∫øu tr∆∞·ªõc ƒë√≥ ch∆∞a unlock
            if !AppUnlockState.shared.isUnlocked(bundleID: bundleID) {
                // Y√™u c·∫ßu x√°c th·ª±c
                if AuthenticationManager.authenticate() {
                    // mark ƒë√£ unlock
                    AppUnlockState.shared.markUnlocked(bundleID: bundleID)
                } else {
                    // kill ngay l·∫≠p t·ª©c
                    app.forceTerminate()
                    print("üõë ƒê√£ ch·∫∑n v√† kill \(bundleID)")
                }
            }
        }
    }

    func stopMonitoring() {
        if let obs = observer {
            NSWorkspace.shared.notificationCenter.removeObserver(obs)
        }
    }
}
